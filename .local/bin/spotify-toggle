#!/usr/bin/env bash
set -euo pipefail

# Focus or bring an existing Spotify window to the current workspace.
# Falls back to launching Spotify if none exist.

APP_ID="spotify"

orig_ws_idx=$(niri msg -j workspaces | jq -r '.[] | select(.is_focused) | .idx')
orig_ws_id=$(niri msg -j workspaces | jq -r '.[] | select(.is_focused) | .id')
# Column index (1-based) of the originally focused window's column
orig_col_idx=$(niri msg -j focused-window | jq -r '.layout.pos_in_scrolling_layout[0] // empty')

windows_json=$(niri msg -j windows)

id_on_current=$(printf '%s' "$windows_json" \
  | jq -r --arg app "$APP_ID" --argjson cur "$orig_ws_id" \
    '.[] | select(.app_id == $app and .workspace_id == $cur) | .id' \
  | head -n1)

if [[ -n "${id_on_current}" ]]; then
  if [[ "${SPOTIFY_FOCUS_ONLY:-0}" == "1" ]]; then
    niri msg action focus-window --id "$id_on_current"
    exit 0
  fi
  # Focus it, make it its own column, and place that column right of the original column.
  niri msg action focus-window --id "$id_on_current"
  niri msg action expel-window-from-column
  if [[ -n "${orig_col_idx}" ]]; then
    niri msg action move-column-to-index "$((orig_col_idx + 1))"
  fi
  exit 0
fi

id_any=$(printf '%s' "$windows_json" \
  | jq -r --arg app "$APP_ID" '.[] | select(.app_id == $app) | .id' \
  | head -n1)

if [[ -n "${id_any}" ]]; then
  if [[ "${SPOTIFY_FOCUS_ONLY:-0}" == "1" ]]; then
    niri msg action focus-window --id "$id_any"
    exit 0
  fi
  # Bring the window to the current workspace without moving focus first.
  niri msg action move-window-to-workspace --window-id "$id_any" --focus false "$orig_ws_idx"
  # Focus it, make it its own column, and place that column right of the original column.
  niri msg action focus-window --id "$id_any"
  niri msg action expel-window-from-column
  if [[ -n "${orig_col_idx}" ]]; then
    niri msg action move-column-to-index "$((orig_col_idx + 1))"
  fi
  exit 0
fi

# Launch Spotify (respect user wrapper on PATH if present).
exec spotify "$@"
