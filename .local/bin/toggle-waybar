#!/usr/bin/env bash
set -euo pipefail

# Toggle Waybar with better env + logging for Tofi/drun

LOG_DIR="${XDG_STATE_HOME:-$HOME/.local/state}"
mkdir -p "$LOG_DIR"
LOG_FILE="$LOG_DIR/toggle-waybar.log"

timestamp() { date '+%Y-%m-%d %H:%M:%S'; }

# Only match the actual waybar process name
if pgrep -x waybar >/dev/null 2>&1; then
  echo "[$(timestamp)] Stopping Waybar" >>"$LOG_FILE"
  pkill -x waybar || true
  exit 0
fi

echo "[$(timestamp)] Starting Waybar" >>"$LOG_FILE"
echo "  PATH=$PATH" >>"$LOG_FILE"
echo "  WAYLAND_DISPLAY=${WAYLAND_DISPLAY:-<unset>}" >>"$LOG_FILE"
echo "  XDG_SESSION_TYPE=${XDG_SESSION_TYPE:-<unset>}" >>"$LOG_FILE"
echo "  XDG_RUNTIME_DIR=${XDG_RUNTIME_DIR:-<unset>}" >>"$LOG_FILE"
command -v waybar >>"$LOG_FILE" 2>&1 || echo "  waybar not found in PATH" >>"$LOG_FILE"

# Ensure minimal Wayland env when launched from desktop entry/drun
export WAYLAND_DISPLAY="${WAYLAND_DISPLAY:-wayland-0}"
export XDG_SESSION_TYPE="${XDG_SESSION_TYPE:-wayland}"

# Prefer asking niri to spawn waybar so it inherits the compositor env
if command -v niri >/dev/null 2>&1; then
  if niri msg action spawn -- waybar >>"$LOG_FILE" 2>&1; then
    :
  else
    echo "[$(timestamp)] niri spawn failed; falling back to direct exec" >>"$LOG_FILE"
    setsid -f bash -lc 'waybar >/dev/null 2>>"'$LOG_FILE'"' || {
      echo "[$(timestamp)] Failed to exec waybar" >>"$LOG_FILE"
      exit 1
    }
  fi
else
  # Start detached; send stdout to null, stderr to log
  setsid -f bash -lc 'waybar >/dev/null 2>>"'$LOG_FILE'"' || {
    echo "[$(timestamp)] Failed to exec waybar" >>"$LOG_FILE"
    exit 1
  }
fi

# Give Waybar a moment to come up, then verify
sleep 0.5
if pgrep -x waybar >/dev/null 2>&1; then
  echo "[$(timestamp)] Waybar started (pid(s): $(pgrep -x waybar | tr '\n' ' '))" >>"$LOG_FILE"
else
  echo "[$(timestamp)] Waybar failed to start; check errors above" >>"$LOG_FILE"
fi

exit 0
